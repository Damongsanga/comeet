plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.4'
	id "org.sonarqube" version "4.4.1.3373"
}
group = 'com.a506'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

sonar {
	properties {
		property "sonar.projectKey", "comeet-code-analysis"
		property "sonar.host.url", "http://i10a506.p.ssafy.io:3401"
		property "sonar.login", "sqp_74d57b5c8de20ea327e2f2f9b3ef35e73d80015b"
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-websocket' //웹소켓

	runtimeOnly 'com.mysql:mysql-connector-j'
	runtimeOnly 'com.h2database:h2' // 테스트 코드 작성시 사용할 DB(H2)

	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	//validation
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation'

	//Querydsl 추가
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	// @Entity 어노테이션 선언한 클래스 탐색하고 Q클래스를 생성
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api" // javax->jakarta 변경 에러 대응 코드
	annotationProcessor "jakarta.persistence:jakarta.persistence-api" // javax->jakarta 변경 에러 대응 코드

	// Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	//jackson
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'

	// s3
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE' // 현재 3.0.0이 최신임, 나중에 되는지 확인


	//mongodb
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation("com.querydsl:querydsl-mongodb:5.0.0") {
		exclude group: "org.mongodb", module: "mongo-java-driver"
	}

	// Apache Commons Lang for RandomUtil
	implementation 'org.apache.commons:commons-lang3:3.12.0'


	//JJWT
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:JJWT_RELEASE_VERSION'
}



// querydsl 저장 위치
def querydslSrcDir = 'src/main/generated'
tasks.withType(JavaCompile) {
	options.generatedSourceOutputDirectory = file(querydslSrcDir)
}

tasks.named('test') {
	useJUnitPlatform()
}


clean {
	// clean 실행 시 생성된 QClass 삭제
	delete file('src/main/generated')
}
